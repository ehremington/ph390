#!/usr/bin/env python
# coding: utf-8

# # Day 18

# In[1]:


def GaussLagQuad8(function):
    x=np.asarray([1.7027963230510100e-1, 9.0370177679937991e-1,       2.2510866298661307,    4.2667001702876588,       7.0459054023934657,    1.0758516010180995e+1,       1.5740678641278005e+1, 2.2863131736889264e+1])
    w=np.asarray([3.6918858934163753e-1, 4.1878678081434296e-1,       1.7579498663717181e-1, 3.3343492261215652e-2,       2.7945362352256725e-3, 9.0765087733582131e-5,       8.4857467162725315e-7, 1.0480011748715104e-9])
    integral = np.sum(w*function(x))
    return(integral)

def gaussHermQuad8(function):
    x = np.asarray([-0.38118699,-1.157193712,-1.981656757,-2.93063742,0.38118699,1.157193712,1.981656757,2.93063742])
    w = np.asarray([0.661147013,0.207802326,0.017077983,0.000199604,0.661147013,0.207802326,0.017077983,.000199604])
    integral = np.sum(w*function(x))
    return(integral)

def gaussLegQuad8(function):
    x = np.asarray([-0.183434643,-0.52553241,-0.796666477,-0.960289857,0.183434643,0.52553241,0.796666477,0.960289857])
    w = np.asarray([0.362683783,0.313706646,0.222381035,0.101228536,0.362683783,0.313706646,0.222381035,0.101228536])
    integral = np.sum(w*function(x))



# In[2]:


def f(x):
    return(x**3/(1-np.exp(-x)))


# In[3]:


GaussLagQuad8(f)


# In[4]:


def g(x):
    return(1/(1-x)**2/np.exp(-x))


# In[5]:


GaussLagQuad8(g)


# In[ ]:




